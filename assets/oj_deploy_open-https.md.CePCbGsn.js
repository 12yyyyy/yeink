import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.ZS1GtFyN.js";const g=JSON.parse('{"title":"开启HTTPS","description":"","frontmatter":{},"headers":[],"relativePath":"oj/deploy/open-https.md","filePath":"oj/deploy/open-https.md","lastUpdated":null}'),e={name:"oj/deploy/open-https.md"},t=n(`<h1 id="开启https" tabindex="-1">开启HTTPS <a class="header-anchor" href="#开启https" aria-label="Permalink to &quot;开启HTTPS&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>注意：需要使用你所购买域名的<strong>Nginx</strong>对应的证书文件</p></div><ul><li><p>单机部署：</p><p>提供<code>server.crt</code>和<code>server.key</code>证书与密钥文件放置<code>/standAlone</code>目录下，与<code>docker-compose.yml</code>和<code>.env</code>文件放置同一位置，然后修改<code>docker-compose.yml</code>中的hoj-frontend的配置。</p></li><li><p>分布式部署：</p><p>提供<code>server.crt</code>和<code>server.key</code>证书与密钥文件放置<code>/distributed/main</code>目录下，与<code>docker-compose.yml</code>和<code>.env</code>文件放置同一位置，然后修改<code>docker-compose.yml</code>中的hoj-frontend的配置。</p></li></ul><p>主要修改<code>volumes</code>的挂载，取消掉原来的注释，将<code>server.crt</code>和<code>server.key</code>文件映射覆盖容器中原有的文件，然后修改<code>SERVER_NAME</code>为你的域名，格式例如<code>baidu.com</code>，<code>USE_HTTPS</code>改为true，如下面所示。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hoj-frontend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">registry.cn-shenzhen.aliyuncs.com/hcode/hoj_frontend</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hoj-frontend</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">always</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 开启https，请提供证书</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./server.crt:/etc/nginx/etc/crt/server.crt</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./server.key:/etc/nginx/etc/crt/server.key</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 修改前端logo</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # - ./logo.a0924d7d.png:/usr/share/nginx/html/assets/img/logo.a0924d7d.png</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # - ./backstage.8bce8c6e.png:/usr/share/nginx/html/assets/img/backstage.8bce8c6e.png</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SERVER_NAME=localhost</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 提供你的域名！！！！例如baidu.com</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">BACKEND_SERVER_HOST=\${BACKEND_HOST:-172.20.0.5}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # backend后端服务地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">BACKEND_SERVER_PORT=\${BACKEND_PORT:-6688}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # backend后端服务端口号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">USE_HTTPS=true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 使用https请设置为true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;80:80&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;443:443&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      hoj-network</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        ipv4_address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">172.20.0.6</span></span></code></pre></div><p>修改完成后，使用<code>docker-compose up -d</code>重启<code>hoj-frontend</code>容器即可。</p>`,6),p=[t];function l(h,k,d,o,c,r){return a(),i("div",null,p)}const y=s(e,[["render",l]]);export{g as __pageData,y as default};
