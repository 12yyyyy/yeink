import{_ as s,c as a,o as e,a3 as n}from"./chunks/framework.ZS1GtFyN.js";const u=JSON.parse('{"title":"自定义前端","description":"","frontmatter":{},"headers":[],"relativePath":"oj/use/update-fe.md","filePath":"oj/use/update-fe.md","lastUpdated":null}'),o={name:"oj/use/update-fe.md"},p=n(`<h1 id="自定义前端" tabindex="-1">自定义前端 <a class="header-anchor" href="#自定义前端" aria-label="Permalink to &quot;自定义前端&quot;">​</a></h1><h2 id="一、完全自定义前端" tabindex="-1">一、完全自定义前端 <a class="header-anchor" href="#一、完全自定义前端" aria-label="Permalink to &quot;一、完全自定义前端&quot;">​</a></h2><p>直接下载 <a href="https://gitee.com/himitzh0730/hoj/tree/master/hoj-vue" target="_blank" rel="noreferrer">hoj-vue</a></p><p>修改后，使用<code>npm run build</code>，生成一个dist文件夹，结构如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dist</span></span>
<span class="line"><span>├── index.html</span></span>
<span class="line"><span>├── favicon.ico</span></span>
<span class="line"><span>└── assets</span></span>
<span class="line"><span>    ├── css</span></span>
<span class="line"><span>    │   ├── ....</span></span>
<span class="line"><span>    ├── fonts</span></span>
<span class="line"><span>    │   ├── ....</span></span>
<span class="line"><span>    ├── img</span></span>
<span class="line"><span>    │   ├── ....</span></span>
<span class="line"><span>    ├── js</span></span>
<span class="line"><span>    │   ├── ....</span></span>
<span class="line"><span></span></span>
<span class="line"><span>....</span></span>
<span class="line"><span>....</span></span></code></pre></div><p>将 <code>dist</code> 文件夹复制到服务器上某个目录下，比如 <code>/hoj/www/html/dist</code>，然后修改 <code>docker-compose.yml</code>，在 <code>hoj-frontend</code> 模块中的 <code>volumes</code> 中增加一行 <code>- /hoj/www/html/dist:/usr/share/nginx/html</code> （冒号前面的请修改为实际的路径），然后 <code>docker-compose up -d</code> 即可。</p><h2 id="二、仅修改图标" tabindex="-1">二、仅修改图标 <a class="header-anchor" href="#二、仅修改图标" aria-label="Permalink to &quot;二、仅修改图标&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果仅仅只是修改前台logo、管理后台logo和favicon.ico，那么操作如下：</p></div><p>修改 <code>docker-compose.yml</code>，在 <code>hoj-frontend</code> 模块中的 <code>volumes</code> 中添加如下：</p><p>注意：冒号前面的是你主机实际存储图片文件的路径，主要是确定是否需要修改这个；冒号后面的是映射的docker容器内的文件路径，<strong>不要修改</strong>！！！</p><p>例如：<code>/usr/share/nginx/html/assets/img/logo.a0924d7d.png</code>这个不要修改，主要修改<code>./logo.png</code>，确定图片文件的路径即可！</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./logo.png:/usr/share/nginx/html/assets/img/logo.a0924d7d.png</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./backstage.png:/usr/share/nginx/html/assets/img/backstage.8bce8c6e.png</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./favicon.ico:/usr/share/nginx/html/favicon.ico</span></span></code></pre></div><p><code>logo.png</code>为前台导航栏左边的logo，<code>backstage.png</code>为后台侧边导航栏上方的logo，<code>favicon.ico</code>为小图标</p><p><strong>图片文件需放在与docker-compose.yml同个目录下，或者提供绝对路径也可。</strong></p><p>修改保存完成，使用<code>docker-compose up -d</code>重启<code>hoj-frontend</code>即可，前端浏览器有缓存，可以刷新浏览器或者换别的浏览器进行查看！</p>`,15),c=[p];function i(t,l,d,r,h,g){return e(),a("div",null,c)}const k=s(o,[["render",i]]);export{u as __pageData,k as default};
