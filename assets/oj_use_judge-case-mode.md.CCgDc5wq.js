import{_ as a,c as t,o as e,a3 as s}from"./chunks/framework.ZS1GtFyN.js";const o="/assets/f4f4a8bbe15e4ef1aa766524eaa6fbeb.BB6SMVHV.png",c="/assets/ecdd9ce03251440d9204bc728ef4d66b.D2ibA4Nd.png",r="/assets/6b0404229b894d01aa98ee43bbb4d034.DxmRyBum.png",f=JSON.parse('{"title":"用例模式","description":"","frontmatter":{},"headers":[],"relativePath":"oj/use/judge-case-mode.md","filePath":"oj/use/judge-case-mode.md","lastUpdated":null}'),i={name:"oj/use/judge-case-mode.md"},l=s('<h1 id="用例模式" tabindex="-1">用例模式 <a class="header-anchor" href="#用例模式" aria-label="Permalink to &quot;用例模式&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><p>​ HOJ的测试用例评测模式有以下几种：</p><p>​ <strong>ACM题目</strong>：默认（全部评测）、遇错止评（顺序评测）</p><p>​ <strong>OI题目</strong>：全部评测（得分加和）、子任务（最低得分）、子任务（平均得分）</p></div><h3 id="一、acm题目" tabindex="-1">一、ACM题目 <a class="header-anchor" href="#一、acm题目" aria-label="Permalink to &quot;一、ACM题目&quot;">​</a></h3><p><img src="'+o+'" alt="ACM题目"></p><h4 id="_1-默认-全部评测" tabindex="-1">1. 默认（全部评测） <a class="header-anchor" href="#_1-默认-全部评测" aria-label="Permalink to &quot;1. 默认（全部评测）&quot;">​</a></h4><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>​ 用户提交的代码将运行所有的测试用例，然后汇总结果。如果全部测试点都符合预期，则评测状态结果为<strong>Accepted</strong>，否则遍历所有测试点结果，将<strong>第一个</strong>非Accepted的测试点的状态作为最终结果。</p></div><h4 id="_2-遇错止评-顺序评测" tabindex="-1">2. 遇错止评（顺序评测） <a class="header-anchor" href="#_2-遇错止评-顺序评测" aria-label="Permalink to &quot;2. 遇错止评（顺序评测）&quot;">​</a></h4><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>​ 用户提交的代码将顺序运行所有测试用例，如果遇到某个测试点的结果（<strong>非Accepted</strong>）不符合预期，则评测结束，将该测试点的评测结果作为最终结果；否则一直遍历全部测试用例评测直至结束。</p></div><h3 id="二、oi题目" tabindex="-1">二、OI题目 <a class="header-anchor" href="#二、oi题目" aria-label="Permalink to &quot;二、OI题目&quot;">​</a></h3><p><img src="'+c+'" alt="OI题目"></p><h4 id="_1-全部评测-得分加和" tabindex="-1">1. 全部评测（得分加和） <a class="header-anchor" href="#_1-全部评测-得分加和" aria-label="Permalink to &quot;1. 全部评测（得分加和）&quot;">​</a></h4><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>​ 用户提交的代码将运行所有的测试用例，然后汇总所有评测点的得分和结果。如果全部测试点都符合预期，则评测状态结果为<strong>Accepted</strong>，得分为该题目的满分；否则遍历所有测试点结果，<strong>加和所有测试点的得分</strong>，作为该评测的最终得分。</p></div><h4 id="_2-子任务-最低得分" tabindex="-1">2. 子任务（最低得分） <a class="header-anchor" href="#_2-子任务-最低得分" aria-label="Permalink to &quot;2. 子任务（最低得分）&quot;">​</a></h4><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>​ 将全部测试用例按照配置的组数分成多个子任务评测组，每个子任务<strong>求该组测试点的最低得分</strong>，作为该子任务的得分，然后<strong>汇总加和所有子任务组的得分</strong>，作为该评测的最终得分。</p></div><p><img src="'+r+'" alt="子任务"></p><h4 id="_3-子任务-平均得分" tabindex="-1">3. 子任务（平均得分） <a class="header-anchor" href="#_3-子任务-平均得分" aria-label="Permalink to &quot;3. 子任务（平均得分）&quot;">​</a></h4><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>​ 将全部测试用例按照配置的组数分成多个子任务评测组，每个子任务<strong>加和该组所有测试点的得分求平均分</strong>，作为该子任务的得分，然后<strong>汇总加和所有子任务组的得分</strong>，作为该评测的最终得分。</p></div>',17),n=[l];function d(p,h,_,m,u,b){return e(),t("div",null,n)}const k=a(i,[["render",d]]);export{f as __pageData,k as default};
